🎯 מטרה:
למנוע מקרים שבהם בודקי איכות נותנים ציונים שטחיים או שגויים (למשל: מתעלמים מבאגים, מעבירים עיצובים כושלים), ולהבטיח תהליך ביקורת אמיתי, מקצועי ואמין.

🛠️ איך זה עובד בפועל:
1. איתור חריגות בבדיקת תוכנה / פיתוח
כאשר מתכנת שולח משימה, המשתמשים והבודקים מצביעים:

ציון כללי (0–100)

דיווחים ספציפיים על תקלות, חוויית משתמש, הערות קוד.

אם 70%+ מהמצביעים מדווחים על בעיה מסוימת, ובודק תוכנה טוען שאין בעיה:

תופיע התראה על "חריגות בשיפוט הבודק".

חזרה על התנהגות כזו 3 פעמים תוביל לבדיקה ע"י הנהלת האופרציה.

2. בדיקת איכות לעיצוב גרפי / ממשק
במקרה של עיצוב:

המערכת תציג למשתמשים שני עיצובים (A/B Test).

כל משתמש יתבקש לבחור:

מה יותר יפה / ברור / מקצועי – ולמה (משפט קצר).

אם 80% מהמצביעים מעדיפים עיצוב B, והבודק המקצועי נותן 90 לעיצוב A בלי נימוק רציני:

תירשם התראה "חוסר התאמה בין דעת הרוב לבדיקה".

3. מנגנון אכיפה הוגן
אחרי 3 התראות תוך פרק זמן מסוים (למשל חודש):

מתקיימת שיחה עם נציג אופרציה.

ניתן להקפיא זמנית הרשאות בדיקה של הבודק.

במקרים קיצוניים – מעבר לתפקיד אחר או סיום עבודה.

4. 📌 עקרונות מנחים:
הרוב לא תמיד צודק – אבל הוא מדד חזק.

אין עונש אוטומטי. תמיד תתקיים שיחה.

הבודק רשאי להגיש ערעור או הסבר.

שקיפות מלאה – כל צד רואה למה הייתה חריגה.

✅ יתרונות:
מגביר אמון במערכת.

שומר על תקשורת דמוקרטית ללא אמונה עיוורת.

מסנן בודקים שטחיים / עצלנים מבלי לפגוע באלו שכן משתדלים.

נותן קרדיט לקהל – אך תמיד עם רשת ביטחון של ניתוח עומק.
